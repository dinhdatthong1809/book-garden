{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/constants/api-url.ts","./src/app/constants/app-constants.ts","./src/app/constants/app-url.ts","./src/app/constants/local-storage-keys.ts","./src/app/constants/session-storage-keys.ts","./src/app/dom/book-in-cart.ts","./src/app/dom/cart.ts","./src/app/dto/abstract-response.ts","./src/app/dto/order-by-dto.ts","./src/app/dto/request/book-list-criteria-dto.ts","./src/app/pages/error/error.component.ts","./src/app/pages/error/error.component.html","./src/app/pages/main/books/books.component.ts","./src/app/pages/main/books/books.component.html","./src/app/pages/main/home/home.component.ts","./src/app/pages/main/home/home.component.html","./src/app/pages/main/main.component.ts","./src/app/pages/main/main.component.html","./src/app/pages/main/sign-in/sign-in.component.ts","./src/app/pages/main/sign-in/sign-in.component.html","./src/app/pages/main/sign-up/sign-up.component.ts","./src/app/pages/main/sign-up/sign-up.component.html","./src/app/pages/main/your-cart/your-cart.component.ts","./src/app/pages/main/your-cart/your-cart.component.html","./src/app/pages/main/your-profile/your-profile.component.ts","./src/app/pages/main/your-profile/your-profile.component.html","./src/app/services/abstract.service.ts","./src/app/services/alert.service.ts","./src/app/services/authenticated.service.ts","./src/app/services/book.service.ts","./src/app/services/cart.service.ts","./src/app/services/category.service.ts","./src/app/services/error-handler.service.ts","./src/app/services/order.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {MainComponent} from \"src/app/pages/main/main.component\";\r\nimport {ErrorComponent} from \"src/app/pages/error/error.component\";\r\nimport {AppUrl} from \"src/app/constants/app-url\";\r\nimport {SignInComponent} from \"src/app/pages/main/sign-in/sign-in.component\";\r\nimport {SignUpComponent} from \"src/app/pages/main/sign-up/sign-up.component\";\r\nimport {BooksComponent} from \"src/app/pages/main/books/books.component\";\r\nimport {AppComponent} from \"src/app/app.component\";\r\nimport {HomeComponent} from \"src/app/pages/main/home/home.component\";\r\nimport {YourCartComponent} from \"src/app/pages/main/your-cart/your-cart.component\";\r\nimport {YourProfileComponent} from \"src/app/pages/main/your-profile/your-profile.component\";\r\n\r\nconst routes: Routes = [\r\n    {path: AppUrl.APP, component: AppComponent, children: [\r\n        {path: AppUrl.MAIN, component: MainComponent, children: [\r\n            {path: AppUrl.HOME, component: HomeComponent, pathMatch: \"full\"},\r\n            {path: AppUrl.BOOKS, component: BooksComponent, pathMatch: \"full\"},\r\n            {path: AppUrl.YOUR_CART, component: YourCartComponent, pathMatch: \"full\"},\r\n            {path: AppUrl.SIGN_IN, component: SignInComponent, pathMatch: \"full\"},\r\n            {path: AppUrl.SIGN_UP, component: SignUpComponent, pathMatch: \"full\"},\r\n            {path: AppUrl.YOUR_PROFILE, component: YourProfileComponent, pathMatch: \"full\"},\r\n        ]},\r\n        {path: AppUrl.ERROR, component: ErrorComponent},\r\n        {path: \"**\", redirectTo: AppUrl.MAIN, pathMatch: \"full\"}\r\n    ]},\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'customer';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {ErrorHandler, NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {NavBarComponent} from './components/nav-bar/nav-bar.component';\r\nimport {MainComponent} from './pages/main/main.component';\r\nimport {ErrorComponent} from './pages/error/error.component';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {SignUpComponent} from './pages/main/sign-up/sign-up.component';\r\nimport {SignInComponent} from './pages/main/sign-in/sign-in.component';\r\nimport {BooksComponent} from './pages/main/books/books.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HomeComponent } from './pages/main/home/home.component';\r\nimport { YourCartComponent } from './pages/main/your-cart/your-cart.component';\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {ToastrModule} from \"ngx-toastr\";\r\nimport {ErrorHandlerService} from \"src/app/services/error-handler.service\";\r\nimport { YourProfileComponent } from './pages/main/your-profile/your-profile.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavBarComponent,\r\n        MainComponent,\r\n        ErrorComponent,\r\n        SignInComponent,\r\n        SignUpComponent,\r\n        BooksComponent,\r\n        FooterComponent,\r\n        HomeComponent,\r\n        YourCartComponent,\r\n        YourProfileComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        ReactiveFormsModule,\r\n        NgbModule,\r\n        FormsModule,\r\n        BrowserAnimationsModule,\r\n        ToastrModule.forRoot(),\r\n    ],\r\n    providers: [\r\n        {provide: ErrorHandler, useClass: ErrorHandlerService},\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AppConstants} from \"src/app/constants/app-constants\";\r\n\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: './footer.component.html',\r\n    styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n    appAuthor = AppConstants.APP_AUTHOR;\r\n\r\n    socialIcons: any = {\r\n        facebook: \"fab fa-facebook-f\",\r\n        instagram: \"fab fa-instagram\",\r\n        github: \"fab fa-github\"\r\n    }\r\n\r\n    members: string[] = [\r\n\r\n    ];\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<div class=\"font-play\">\r\n    <div class=\"bg-white\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"pb-4 pt-4 row d-flex justify-content-center\">\r\n                <div class=\"col-lg-12\">\r\n                    <div class=\"mt-3 text-lg-center text-sm-left font-balooda\">\r\n                        <h3>\r\n                            <img class=\"img-fluid\" width=\"50\" height=\"50\" src=\"assets/images/logo4.png\" alt=\"brand\">\r\n                            <span class=\"text-primary\"> PROF</span><span class=\"text-dark\">TEAM</span>\r\n\r\n                        </h3>\r\n                        <a *ngFor=\"let item of appAuthor.members | keyvalue\"\r\n                           [href]=\"item.value.facebook\"\r\n                           class=\"my-2 mx-3\"\r\n                           target=\"_blank\"\r\n                        >\r\n                            <img class=\"rounded-circle border border-primary test\"\r\n                                 height=\"100\"\r\n                                 width=\"100\"\r\n                                 src=\"assets/images/avatars/{{item.key}}.jpg\">\r\n                        </a>\r\n                        <h4 class=\"text-dark mb-4 mt-4\">Contact <span class=\"text-primary\">information</span></h4>\r\n                        <div class=\"text-secondary\">\r\n                            <p><i class=\"fas fa-map-marker-alt\"></i> {{appAuthor.address}}</p>\r\n                            <p><i class=\"fas fa-phone\"></i> {{appAuthor.phone}}</p>\r\n                            <p><i class=\"fas fa-envelope\"></i> {{appAuthor.email}}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"p-3 bg-dark\">\r\n        <div class=\"row d-flex align-items-center\">\r\n            <div class=\"col-lg-6 d-flex\">\r\n                <p class=\"text-white mr-auto mb-auto\">\r\n                    Copyright &copy; 2020. Developed by\r\n                    <a href=\"{{appAuthor.socialLinks['github']}}/book-garden\" target=\"_blank\">{{appAuthor.name}}</a>.\r\n                    All rights reseved\r\n                </p>\r\n            </div>\r\n            <div class=\"col-lg-6 d-flex\">\r\n                <div class=\"ml-auto\">\r\n                    <a *ngFor=\"let item of appAuthor.socialLinks | keyvalue\" [href]=\"item.value\" target=\"_blank\" class=\"text-white bg-secondary btn-social btn-social-circle btn-outline-github m-1\">\r\n                        <i [class]=\"socialIcons[item.key]\"></i>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {MenuItem} from \"src/app/abstract/menu\";\r\nimport {AppUrl} from \"src/app/constants/app-url\";\r\nimport {AuthenticatedService} from \"src/app/services/authenticated.service\";\r\nimport {AlertService} from \"src/app/services/alert.service\";\r\nimport {SweetAlertResult} from \"sweetalert2\";\r\n\r\n@Component({\r\n    selector: 'app-nav-bar',\r\n    templateUrl: './nav-bar.component.html',\r\n    styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n    leftItems: MenuItem[] = [\r\n        {\r\n            name: \"Books\",\r\n            url: `/${AppUrl.BOOKS}`,\r\n            disableRouter: false\r\n        },\r\n        {\r\n            name: \"Your cart\",\r\n            url: `/${AppUrl.YOUR_CART}`,\r\n            disableRouter: false\r\n        }\r\n    ];\r\n\r\n    rightItems: MenuItem[] = [\r\n        {\r\n            name: \"Sign up\",\r\n            url: `/${AppUrl.SIGN_UP}`,\r\n            disableRouter: false\r\n        },\r\n        {\r\n            name: \"Sign in\",\r\n            url: `/${AppUrl.SIGN_IN}`,\r\n            disableRouter: false\r\n        }\r\n    ];\r\n\r\n    rightItemsSignIned: MenuItem[] = [\r\n        {\r\n            name: \"Sign out\",\r\n            url: `/${AppUrl.SIGN_OUT}`,\r\n            disableRouter: true\r\n        },\r\n        {\r\n            name: \"Your profile\",\r\n            url: `/${AppUrl.YOUR_PROFILE}`,\r\n            disableRouter: false\r\n        }\r\n    ];\r\n\r\n    constructor(public _authenticatedService: AuthenticatedService,\r\n                private _alertService: AlertService) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    signOut(): void {\r\n        this._alertService.ask(\"Signing out and return to home page\")\r\n                          .then((result: SweetAlertResult) => {\r\n                              if (result.value) {\r\n                                  this._authenticatedService.signOut();\r\n                                  window.location.href = `/${AppUrl.HOME}`;\r\n                              }\r\n                          });\r\n    }\r\n\r\n}\r\n","<nav class=\"w-100 navbar shadow-sm navbar-expand-lg navbar-custom navbar-light font-balooda fixed-top\">\r\n    <a class=\"navbar-brand\" routerLink=\"/\">\r\n        <img src=\"assets/images/logo4.png\" width=\"30\" class=\"d-inline-block align-top\" alt=\"brand logo\">\r\n        <span class=\"text-dark pl-2\">BOOK</span>\r\n        <span class=\"text-primary\">GARDEN</span>\r\n    </a>\r\n\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbar\">\r\n        <ul class=\"navbar-nav\">\r\n            <li *ngFor=\"let item of leftItems; let last = last;\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a [routerLink]=\"item.url\"\r\n                   [ngClass]=\"{'disabled': item.disableRouter}\"\r\n                   class=\"nav-link text-uppercase\"\r\n                >\r\n                    <i *ngIf=\"last\" class=\"fa fa-shopping-cart mr-1\" aria-hidden=\"true\"></i>\r\n                    {{item.name}}\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        <ul *ngIf=\"!_authenticatedService.isAuthenticated()\" class=\"navbar-nav ml-auto\">\r\n            <li *ngFor=\"let item of rightItems; let last = last;\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a [routerLink]=\"item.url\"\r\n                   [ngClass]=\"{'btn btn-primary text-white': last}\"\r\n                   class=\"nav-link text-uppercase\"\r\n                >\r\n                    {{item.name}}\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        <ul *ngIf=\"_authenticatedService.isAuthenticated()\" class=\"navbar-nav ml-auto\">\r\n            <li *ngFor=\"let item of rightItemsSignIned; let last = last; let first = first;\" class=\"nav-item\" routerLinkActive=\"active\">\r\n                <a *ngIf=\"!item.disableRouter\" [routerLink]=\"item.url\"\r\n                   [ngClass]=\"{'btn btn-primary text-white': last}\"\r\n                   class=\"nav-link text-uppercase\"\r\n                >\r\n                    {{item.name}}\r\n                </a>\r\n                <div *ngIf=\"item.disableRouter\" (click)=\"signOut()\" style=\"cursor: pointer\"\r\n                   [ngClass]=\"{'btn btn-primary text-white': last}\"\r\n                   class=\"nav-link text-uppercase\"\r\n                >\r\n                    {{item.name}}\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n","export class ApiUrl {\r\n\r\n    // static readonly HOST: string = \"http://localhost:8088/\";\r\n    static readonly HOST: string = \"http://54.179.160.205/\";\r\n\r\n    static readonly BOOK: string = `${ApiUrl.HOST}api/book`;\r\n    static readonly BOOK_FILTER: string = `${ApiUrl.HOST}api/book/search`;\r\n\r\n    static readonly CATEGORY: string = `${ApiUrl.HOST}api/category`;\r\n    static readonly CATEGORY_FIND_ALL: string = `${ApiUrl.HOST}api/category/findAll`;\r\n\r\n    static readonly USER: string = `${ApiUrl.HOST}api/user`;\r\n    static readonly USER_SIGN_UP: string = `${ApiUrl.HOST}api/user/register`;\r\n    static readonly USER_FIND_BY_USERNAME: string = `${ApiUrl.HOST}api/user/find-by-username`;\r\n    static readonly USER_SIGN_IN: string = `${ApiUrl.HOST}api/user/login`;\r\n    static readonly USER_CHECK_OUT: string = `${ApiUrl.HOST}api/user/order`;\r\n    static readonly USER_ORDER: string = `${ApiUrl.HOST}api/user/order-history`;\r\n\r\n}\r\n","import {Validators} from \"@angular/forms\";\r\n\r\nexport class AppConstants {\r\n\r\n    static readonly APP_AUTHOR = {\r\n        name: \"Prof team\",\r\n        address: \"150, Thanh Da Street, HCM City, Vietnam\",\r\n        email: \"profteam@gmail.com\",\r\n        phone: \"(090) 6546 948\",\r\n        socialLinks: {\r\n            facebook: \"https://www.facebook.com/dinh.dat.thong\",\r\n            github: \"https://github.com/dinhdatthong1809\",\r\n            instagram: \"https://www.instagram.com/dinh.dat.thong\"\r\n        },\r\n        members: {\r\n            haondps07264: {\r\n                name: \"Nguyễn Đại Hào\",\r\n                facebook: \"https://www.facebook.com/DuckyLuckVN\"\r\n            },\r\n            thanhllps08444: {\r\n                name: \"Lê Long Thành\",\r\n                facebook: \"https://www.facebook.com/yu.nhox\"\r\n            },\r\n            tiendqps08547: {\r\n                name: \"Đào Quang Tiến\",\r\n                facebook: \"https://www.facebook.com/bac.cai.756\"\r\n            },\r\n            bienpdps08445: {\r\n                name: \"Phạm Duy Biên\",\r\n                facebook: \"https://www.facebook.com/phamduybien94\"\r\n            },\r\n            thongddps08464: {\r\n                name: \"Đinh Đat Thông\",\r\n                facebook: \"https://www.facebook.com/dinh.dat.thong\"\r\n            }\r\n        }\r\n    };\r\n\r\n    static readonly NUMBER_ONLY_REGEX: RegExp = /^\\d+$/;\r\n\r\n    static readonly CART_CAPACITY_MAX: number = 10;\r\n    static readonly CART_CAPACITY_PER_ITEM_MAX: number = 7;\r\n\r\n    static readonly USERNAME_REGEX: RegExp = /^[a-zA-Z0-9_]+$/;\r\n    static readonly USERNAME_MIN_LENGTH: number = 3;\r\n    static readonly USERNAME_MAX_LENGTH: number = 40;\r\n\r\n    static readonly FULLNAME_MIN_LENGTH: number = 1;\r\n    static readonly FULLNAME_MAX_LENGTH: number = 75;\r\n\r\n    static readonly PASSWORD_REGEX: RegExp = /^[a-zA-Z0-9\\s\\u002D\\u005F]+$/;\r\n    static readonly PASSWORD_MIN_LENGTH: number = 3;\r\n    static readonly PASSWORD_MAX_LENGTH: number = 40;\r\n\r\n    static readonly ADDRESS_MIN_LENGTH: number = 3;\r\n    static readonly ADDRESS_MAX_LENGTH: number = 100;\r\n\r\n    static readonly PHONE_NUMBER_MIN_LENGTH: number = 10;\r\n    static readonly PHONE_NUMBER_MAX_LENGTH: number = 13;\r\n\r\n    static readonly EMAIL_REGEX: RegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    static readonly EMAIL_MIN_LENGTH: number = 3;\r\n    static readonly EMAIL_MAX_LENGTH: number = 100;\r\n\r\n    static readonly TITLE_KEYWORD_MIN_LENGTH: number = 0;\r\n    static readonly TITLE_KEYWORD_MAX_LENGTH: number = 100;\r\n\r\n    static readonly PRICE_MIN: number = 0;\r\n\r\n}\r\n","export class AppUrl {\r\n\r\n    static readonly APP: string = \"\";\r\n\r\n        static readonly MAIN: string = \"\";\r\n\r\n            static readonly HOME: string = \"\";\r\n\r\n            static readonly BOOKS: string = \"books\";\r\n\r\n            static readonly YOUR_CART: string = \"your-cart\";\r\n\r\n            static readonly SIGN_UP: string = \"sign-up\";\r\n\r\n            static readonly SIGN_IN: string = \"sign-in\";\r\n\r\n            static readonly SIGN_OUT: string = \"sign-up\";\r\n\r\n            static readonly YOUR_PROFILE: string = \"your-profile\";\r\n\r\n            static readonly YOUR_ORDER_HISTORY: string = \"your-order-history\";\r\n\r\n        static readonly ERROR: string = \"error\";\r\n\r\n}\r\n","export class LocalStorageKeys {\r\n\r\n    static readonly TITLE_KEYWORD: string = \"titleKeyword\";\r\n\r\n    static readonly CART: string = \"cart\";\r\n\r\n}\r\n","export class SessionStorageKeys {\r\n\r\n    static readonly USER: string = \"user\";\r\n\r\n}\r\n","import {BookDto} from \"src/app/dto/response/book-dto\";\n\nexport class BookInCart {\n    book: BookDto;\n    amount: number;\n}\n","export class Cart {\n    items: CartItem[] = [];\n}\n\nexport class CartItem {\n    bookId: string;\n    amount: number;\n    price: number;\n\n    constructor(bookId: string, amount: number, price: number) {\n        this.bookId = bookId;\n        this.amount = amount;\n        this.price = price;\n    }\n}\n","export class Response<T> {\r\n    response: {\r\n        resultData: T;\r\n        message: string;\r\n        errorCode: number;\r\n        errorData: any;\r\n    };\r\n}\r\n\r\nexport class PaginationResponse<T> {\r\n    response: {\r\n        resultData: {\r\n            list: T;\r\n            totalElements: number;\r\n        };\r\n        message: string;\r\n        errorCode: number;\r\n        errorData: any;\r\n    };\r\n}\r\n\r\nexport function getPaginatedData<T>(paginationResponse: PaginationResponse<T>): T {\r\n    return paginationResponse.response.resultData.list;\r\n}\r\n\r\nexport function getPaginatedTotalElements<T>(paginationResponse: PaginationResponse<T>): number {\r\n    return paginationResponse.response.resultData.totalElements;\r\n}\r\n\r\nexport function getData<T>(response: Response<T>): T {\r\n    return response.response.resultData;\r\n}\r\n","export class OrderByDto {\n    field: string = \"title\";\n    orderEnum: string = \"ASC\";\n}\n","import {OrderByDto} from \"src/app/dto/order-by-dto\";\r\n\r\nexport class BookListCriteriaDto {\r\n\r\n    title: string = \"\";\r\n\r\n    authorId: string = \"\";\r\n\r\n    categoryId: string = \"\";\r\n\r\n    publisherId: string = \"\";\r\n\r\n    minPrice: number;\r\n\r\n    maxPrice: number;\r\n\r\n    orderBy: OrderByDto = new OrderByDto();\r\n\r\n    page: number = 1;\r\n\r\n    size: number = 5;\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"wrapper\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"text-center error-pages\">\r\n                    <h1 class=\"error-title text-primary\">500</h1>\r\n                    <h2 class=\"error-sub-title text-dark\">Server internal error</h2>\r\n\r\n                    <p class=\"error-message text-dark text-uppercase\">Please try again later</p>\r\n\r\n                    <div class=\"mt-4\">\r\n                        <a href=\"/\" class=\"btn btn-primary btn-round shadow-primary m-1 text-white font-weight-bold\">Back to home page</a>\r\n                    </div>\r\n\r\n                    <div class=\"mt-4\">\r\n                        <p class=\"text-dark\">\r\n                        </p>\r\n                    </div>\r\n                    <hr class=\"w-50\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {BookService} from \"src/app/services/book.service\";\r\nimport {BookDto} from \"src/app/dto/response/book-dto\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {BookListCriteriaDto} from \"src/app/dto/request/book-list-criteria-dto\";\r\nimport {AppConstants} from \"src/app/constants/app-constants\";\r\nimport {getData, getPaginatedData, getPaginatedTotalElements, PaginationResponse, Response} from \"src/app/dto/abstract-response\";\r\nimport {LocalStorageKeys} from \"src/app/constants/local-storage-keys\";\r\nimport {CategoryService} from \"src/app/services/category.service\";\r\nimport {CategoryDto} from \"src/app/dto/response/category-dto\";\r\nimport {CartService} from \"src/app/services/cart.service\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\n\r\n@Component({\r\n    selector: 'app-books',\r\n    templateUrl: './books.component.html',\r\n    styleUrls: ['./books.component.css']\r\n})\r\nexport class BooksComponent implements OnInit {\r\n\r\n    appConstants = AppConstants;\r\n\r\n    books: BookDto[] = [];\r\n\r\n    categories: CategoryDto[];\r\n\r\n    filterForm: FormGroup;\r\n\r\n    submitted: boolean = false;\r\n\r\n    page: number = 1;\r\n\r\n    totalBook: number = 0;\r\n\r\n    pageSizes: number[] = [5, 10, 15];\r\n\r\n    bookListCriteriaDto: BookListCriteriaDto = new BookListCriteriaDto();\r\n\r\n    constructor(private _bookService: BookService,\r\n                private _categoryService: CategoryService,\r\n                private _cartService: CartService,\r\n                private _toastrService: ToastrService,\r\n                private _formBuilder: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initForm();\r\n        this.loadAsyncData();\r\n    }\r\n\r\n    private loadAsyncData(): void {\r\n        this.loadBookList();\r\n        this.loadAllCategories();\r\n    }\r\n\r\n    private loadBookList(): void {\r\n        if (localStorage.getItem(LocalStorageKeys.TITLE_KEYWORD)\r\n                && !this.bookListCriteriaDto.title\r\n                && this.submitted == false) {\r\n            this.bookListCriteriaDto.title = localStorage.getItem(LocalStorageKeys.TITLE_KEYWORD);\r\n            localStorage.setItem(LocalStorageKeys.TITLE_KEYWORD, \"\")\r\n        }\r\n\r\n        this._bookService.findChunkWithTitleKeywordAndPriceAndCategory(this.bookListCriteriaDto)\r\n                         .subscribe((paginationResponse: PaginationResponse<BookDto[]>) => {\r\n                             this.books = getPaginatedData<BookDto[]>(paginationResponse);\r\n                             this.totalBook = getPaginatedTotalElements(paginationResponse);\r\n                         });\r\n    }\r\n\r\n    private loadAllCategories() {\r\n        this._categoryService.findAll()\r\n                             .subscribe((value: Response<CategoryDto[]>) => {\r\n                                 this.categories = getData<CategoryDto[]>(value);\r\n                             });\r\n    }\r\n\r\n    private initForm(): void {\r\n        this.filterForm = this._formBuilder.group({\r\n            title: [null, [\r\n                Validators.maxLength(AppConstants.TITLE_KEYWORD_MAX_LENGTH),\r\n            ]],\r\n            minPrice: [null, [\r\n                Validators.min(AppConstants.PRICE_MIN),\r\n            ]],\r\n            maxPrice: [null, [\r\n                Validators.min(AppConstants.PRICE_MIN),\r\n            ]],\r\n            categoryId: [\"\"],\r\n        });\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.submitted = true;\r\n\r\n        if (this.filterForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this.loadBookList();\r\n    }\r\n\r\n    get getForm() {\r\n        return this.filterForm.controls;\r\n    }\r\n\r\n    goToPage(page: number): void {\r\n        this.bookListCriteriaDto.page = page;\r\n        this.loadAsyncData();\r\n    }\r\n\r\n    addToCart(book: BookDto): void {\r\n        if (this._cartService.reachMaxItem(book.id)) {\r\n            this._toastrService.warning(`You can only buy ${AppConstants.CART_CAPACITY_PER_ITEM_MAX} per type of book`);\r\n            return;\r\n        }\r\n\r\n        if (this._cartService.reachMax() && !this._cartService.contains(book.id)) {\r\n            this._toastrService.warning(`You can not add more than ${AppConstants.CART_CAPACITY_MAX} types of book in cart`);\r\n            return;\r\n        }\r\n\r\n        this._cartService.add(book.id, book.price);\r\n        this._toastrService.success(\"Added to your cart\");\r\n    }\r\n\r\n    changePageSize(): void {\r\n        this.loadAsyncData();\r\n    }\r\n\r\n}\r\n","<div class=\"container-fluid animated fadeIn mt-4 mb-5 full-screen\">\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-3\">\r\n            <div class=\"card h-100\">\r\n                <div class=\"card-header bg-white\">\r\n                    <h4 class=\"text-primary text-wrap\">Filter</h4>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <form [formGroup]=\"filterForm\" (ngSubmit)=\"onSubmit()\" class=\"form-group\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"filterTitleKeyword\" class=\"font-weight-bold\">Title keyword</label>\r\n                            <input formControlName=\"title\"\r\n                                   [(ngModel)]=\"bookListCriteriaDto.title\"\r\n                                   [maxlength]=\"appConstants.TITLE_KEYWORD_MAX_LENGTH\"\r\n                                   [ngClass]=\"{'is-invalid': submitted && getForm.title.errors}\"\r\n                                   class=\"form-control\"\r\n                                   id=\"filterTitleKeyword\">\r\n                            <div *ngIf=\"submitted && getForm.title.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                <div *ngIf=\"getForm.title.errors.maxlength\">\r\n                                    Title keyword has maximum {{appConstants.TITLE_KEYWORD_MAX_LENGTH}} characters\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"filterMinPrice\" class=\"font-weight-bold\">Price (VND)</label>\r\n                            <div class=\"form-row\">\r\n                                <div class=\"col-sm-6 my-1\">\r\n                                    <input formControlName=\"minPrice\"\r\n                                           [(ngModel)]=\"bookListCriteriaDto.minPrice\"\r\n                                           [min]=\"appConstants.PRICE_MIN\"\r\n                                           [ngClass]=\"{'is-invalid': submitted && getForm.minPrice.errors}\"\r\n                                           type=\"number\"\r\n                                           class=\"form-control\"\r\n                                           id=\"filterMinPrice\"\r\n                                           placeholder=\"From\">\r\n                                    <div *ngIf=\"submitted && getForm.minPrice.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                        <div *ngIf=\"getForm.minPrice.errors.min\">\r\n                                            Price's minimum value is {{appConstants.PRICE_MIN}}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-sm-6 my-1\">\r\n                                    <input formControlName=\"maxPrice\"\r\n                                           [(ngModel)]=\"bookListCriteriaDto.maxPrice\"\r\n                                           [min]=\"appConstants.PRICE_MIN\"\r\n                                           [ngClass]=\"{'is-invalid': submitted && getForm.maxPrice.errors}\"\r\n                                           type=\"number\"\r\n                                           class=\"form-control\"\r\n                                           id=\"filterMaxPrice\"\r\n                                           placeholder=\"To\">\r\n                                    <div *ngIf=\"submitted && getForm.maxPrice.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                        <div *ngIf=\"getForm.maxPrice.errors.min\">\r\n                                            Price's minimum value is {{appConstants.PRICE_MIN}}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"filterCategory\" class=\"font-weight-bold\">Category</label>\r\n                            <select formControlName=\"categoryId\"\r\n                                    [(ngModel)]=\"bookListCriteriaDto.categoryId\"\r\n                                    class=\"form-control\"\r\n                                    id=\"filterCategory\">\r\n                                <option value=\"\" selected>All</option>\r\n                                <option *ngFor=\"let category of categories\" [ngValue]=\"category.id\">\r\n                                    {{category.categoryTitle}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <br>\r\n                        <button type=\"submit\" class=\"btn btn-primary font-weight-bold\">\r\n                            <i class=\"fa fa-search\" aria-hidden=\"true\"></i> Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-9 mt-lg-0 mt-sm-3\">\r\n            <div class=\"d-flex justify-content-between mb-2\">\r\n                <ngb-pagination [collectionSize]=\"totalBook\"\r\n                                [(page)]=\"page\"\r\n                                [pageSize]=\"bookListCriteriaDto.size\"\r\n                                [maxSize]=\"5\"\r\n                                [rotate]=\"true\"\r\n                                (pageChange)=\"goToPage($event)\">\r\n                </ngb-pagination>\r\n                <div>\r\n                    <select [(ngModel)]=\"bookListCriteriaDto.size\"\r\n                            class=\"border text-dark font-weight-bold form-control\"\r\n                            (change)=\"changePageSize()\">\r\n                        <option *ngFor=\"let pageSize of pageSizes; let first = first\"\r\n                                [value]=\"pageSize\"\r\n                                [selected]=\"first\">\r\n                            {{pageSize}} items\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div *ngFor=\"let book of books\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header text-lg-left text-center bg-white\">\r\n                        <h4 class=\"text-primary text-wrap\">{{book.title}}</h4>\r\n                    </div>\r\n\r\n                    <div class=\"card-body\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-2 text-center\">\r\n                                <img class=\"border-primary border img-fluid h-100\"\r\n                                     width=\"160\"\r\n                                     height=\"500\"\r\n                                     onerror=\"this.src='assets/images/no-image.png';\"\r\n                                     src=\"https://storage.googleapis.com/book-garden.appspot.com/book/{{book.image}}\"\r\n                                     alt=\"Card image front\">\r\n                            </div>\r\n                            <div class=\"col-lg-10 mt-2 mt-lg-0 d-flex flex-column\">\r\n                                <div class=\"row mt-2 mb-3\">\r\n                                    <div class=\"col-lg-12 text-left\">\r\n                                        <p class=\"card-text\">\r\n                                            <strong class=\"text-dark\">Price</strong>: {{book.price | number:'1.0':'en-US'}} VND\r\n                                        </p>\r\n                                        <p class=\"card-text text-wrap mt-3\">\r\n                                            <strong class=\"text-dark\">Author</strong>: {{book.author.fullname}}\r\n                                        </p>\r\n                                        <p class=\"card-text text-wrap mt-3\">\r\n                                            <strong class=\"text-dark\">Category</strong>: {{book.category.categoryTitle}}\r\n                                        </p>\r\n                                        <p class=\"card-text text-truncate\">\r\n                                            <strong class=\"text-dark\">Description</strong>: {{book.description}}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row mt-auto ml-auto\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <button class=\"btn btn-primary text-white font-weight-bold\" (click)=\"addToCart(book)\">\r\n                                            <i class=\"fa fa-shopping-cart mr-1\" aria-hidden=\"true\"></i> Add to cart\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex justify-content-between\">\r\n                <ngb-pagination [collectionSize]=\"totalBook\"\r\n                                [(page)]=\"page\"\r\n                                [pageSize]=\"bookListCriteriaDto.size\"\r\n                                [maxSize]=\"5\"\r\n                                [rotate]=\"true\"\r\n                                (pageChange)=\"goToPage($event)\">\r\n                </ngb-pagination>\r\n                <div>\r\n                    <select [(ngModel)]=\"bookListCriteriaDto.size\"\r\n                            class=\"border text-dark font-weight-bold form-control\"\r\n                            (change)=\"changePageSize()\">\r\n                        <option *ngFor=\"let pageSize of pageSizes; let first = first\"\r\n                                [value]=\"pageSize\"\r\n                                [selected]=\"first\">\r\n                            {{pageSize}} items\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AppConstants} from \"src/app/constants/app-constants\";\r\nimport {Router} from \"@angular/router\";\r\nimport {AppUrl} from \"src/app/constants/app-url\";\r\nimport {LocalStorageKeys} from \"src/app/constants/local-storage-keys\";\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n    aboutUsTiles: any[] = [\r\n        {\r\n            title: \"Choose good book\",\r\n            content: \"You should choose a good book based on its cover or title\",\r\n            icon: \"note.png\"\r\n        },\r\n        {\r\n            title: \"Prepare time\",\r\n            content: \"You should choose right time, the right book, do not get more stress\",\r\n            icon: \"clock.png\"\r\n        },\r\n        {\r\n            title: \"Aim for target\",\r\n            content: \"Do not waste your time reading bad books and gaining nothing from it\",\r\n            icon: \"target.png\"\r\n        },\r\n        {\r\n            title: \"Be mature\",\r\n            content: \"The more book you read, the more points of view you get\",\r\n            icon: \"man.png\"\r\n        }\r\n    ];\r\n\r\n    filterForm: FormGroup;\r\n\r\n    submitted: boolean = false;\r\n\r\n    appConstants = AppConstants;\r\n\r\n    constructor(private _formBuilder: FormBuilder,\r\n                private _router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initForm();\r\n    }\r\n\r\n    private initForm(): void {\r\n        this.filterForm = this._formBuilder.group(\r\n            {\r\n                title: [null, [\r\n                    Validators.maxLength(AppConstants.TITLE_KEYWORD_MAX_LENGTH),\r\n                ]],\r\n            }\r\n        );\r\n    }\r\n\r\n    get getForm() {\r\n        return this.filterForm.controls;\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.submitted = true;\r\n        let title = this.getForm.title.value;\r\n\r\n        if (this.filterForm.invalid || !title) {\r\n            return;\r\n        }\r\n\r\n        localStorage.setItem(LocalStorageKeys.TITLE_KEYWORD, title);\r\n        this._router.navigateByUrl(`${AppUrl.BOOKS}`);\r\n    }\r\n\r\n}\r\n","<div id=\"homeHall\" class=\"pt-5 pb-5 full-screen\">\r\n    <div class=\"container\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col-12 col-md-5 col-lg-6 order-md-2 text-center\">\r\n\r\n                <!-- Image -->\r\n                <img src=\"assets/images/home-brand.png\" class=\"animated fadeInLeft img-fluid\" alt=\"main\">\r\n\r\n            </div>\r\n            <div class=\"col-12 col-md-7 col-lg-6 order-md-1\">\r\n\r\n                <!-- Heading -->\r\n                <div id=\"brandName\" class=\"animated fadeInDown delay-1s text-center font-weight-bold font-balooda\">\r\n                    BOOK <span class=\"text-primary\">GARDEN</span><br>\r\n                </div>\r\n\r\n                <!-- Forms -->\r\n                <form [formGroup]=\"filterForm\" (ngSubmit)=\"onSubmit()\" id=\"filterForm\" class=\"animated fadeInDown delay-1s \">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"position-relative has-icon-left\">\r\n                            <input formControlName=\"title\"\r\n                                   [maxlength]=\"appConstants.TITLE_KEYWORD_MAX_LENGTH\"\r\n                                   class=\"form-control border border-primary\"\r\n                                   [ngClass]=\"{'is-invalid': submitted && getForm.title.errors}\"\r\n                                   placeholder=\"FIND YOUR BOOK\"/>\r\n                            <div class=\"form-control-position text-secondary\">\r\n                                <i class=\"fas fa-search\"></i>\r\n                            </div>\r\n                            <div *ngIf=\"submitted && getForm.title.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                <div *ngIf=\"getForm.title.errors.maxlength\">\r\n                                    Keyword has maximum {{appConstants.TITLE_KEYWORD_MAX_LENGTH}} characters\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mt-4 text-center\">\r\n                        <button class=\"btn btn-primary shadow mr-2 text-white font-weight-bold\">\r\n                            Search book by title\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"homeAboutUs\" class=\"full-screen pt-5 bg-light\">\r\n    <div class=\"container\">\r\n        <div class=\"row align-items-center\">\r\n            <div class=\"col-12 col-md-12 col-lg-12 text-center\">\r\n\r\n                <!-- Heading -->\r\n                <h3 class=\"text-uppercase\">About us</h3>\r\n\r\n                <!-- Text -->\r\n                <p class=\"\">\r\n                    BookGarden is a paradise platform for students and nerds who want to gain more knowledge<br>\r\n                    We provides many kinds of books for learning, entertainment, ... .\r\n                </p>\r\n            </div>\r\n\r\n            <div class=\"row mt-5 p-3\">\r\n                <div class=\"col-lg-6\">\r\n                    We encourage that readers should keep the license of books, do not share or violate the intelligence property for individual purpose.\r\n                    <div *ngFor=\"let tile of aboutUsTiles\" class=\"mt-5\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-2\">\r\n                                <img class=\"m-2 img-fluid rounded-circle border border-primary shadow\" width=\"100px\" height=\"100px\" src=\"assets/images/icons/theme/{{tile.icon}}\">\r\n                            </div>\r\n                            <div class=\"col-md-10\">\r\n                                <p class=\"h5\">{{tile.title}}</p>\r\n                                {{tile.content}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-6 align-items-center\">\r\n                    <img class=\"img-fluid\" src=\"assets/images/logo7.png\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-main',\r\n    templateUrl: './main.component.html',\r\n    styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n\r\n<br>\r\n\r\n<div class=\"container-fluid mt-5\">\r\n    <div class=\"row\">\r\n        <div class=\"container-fluid p-0\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<app-footer></app-footer>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AppConstants} from \"src/app/constants/app-constants\";\r\nimport {AuthenticatedService} from \"src/app/services/authenticated.service\";\r\nimport {SignInDto} from \"src/app/dto/request/sign-in-dto\";\r\nimport {UserDto} from \"src/app/dto/response/user-dto\";\r\nimport {AlertService} from \"src/app/services/alert.service\";\r\nimport {getData, Response} from \"src/app/dto/abstract-response\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Location} from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'app-sign-in',\r\n    templateUrl: './sign-in.component.html',\r\n    styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n    signInForm: FormGroup;\r\n\r\n    submitted: boolean = false;\r\n\r\n    appConstants = AppConstants;\r\n\r\n    constructor(private _formBuilder: FormBuilder,\r\n                private _alertService: AlertService,\r\n                private _location: Location,\r\n                private _router: Router,\r\n                private _authenticatedService: AuthenticatedService) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this._authenticatedService.isAuthenticated()) {\r\n            this._router.navigateByUrl(\"/\");\r\n        }\r\n\r\n        this.initForm();\r\n    }\r\n\r\n    private initForm(): void {\r\n        this.signInForm = this._formBuilder.group(\r\n            {\r\n                username: [\"\", [\r\n                    Validators.required,\r\n                    Validators.pattern(AppConstants.USERNAME_REGEX),\r\n                    Validators.minLength(AppConstants.USERNAME_MIN_LENGTH),\r\n                    Validators.maxLength(AppConstants.USERNAME_MAX_LENGTH),\r\n                ]],\r\n                password: [\"\", [\r\n                    Validators.required,\r\n                    Validators.pattern(AppConstants.PASSWORD_REGEX),\r\n                    Validators.minLength(AppConstants.PASSWORD_MIN_LENGTH),\r\n                    Validators.maxLength(AppConstants.PASSWORD_MAX_LENGTH),\r\n                ]]\r\n            }\r\n        );\r\n    }\r\n\r\n    get getForm() {\r\n        return this.signInForm.controls;\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.submitted = true;\r\n\r\n        if (this.signInForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        this._alertService.loading();\r\n        let signInDto: SignInDto = <SignInDto> this.signInForm.value;\r\n        this._authenticatedService.signIn(signInDto)\r\n                                  .subscribe((response: Response<UserDto>) => {\r\n                                      let userDto = getData<UserDto>(response);\r\n                                      this._alertService.success(`Welcome back ${userDto.fullname}!`);\r\n                                      this._authenticatedService.saveUserToLocal(signInDto);\r\n                                      this._location.back();\r\n                                  });\r\n    }\r\n\r\n}\r\n","<section class=\"full-screen\">\r\n    <div class=\"card-authentication2 mt-4 mx-auto\">\r\n        <div class=\"card-group animated fadeIn faster\">\r\n            <div class=\"card mb-0\">\r\n                <div class=\"bg-signin2\"></div>\r\n                <div class=\"card-img-overlay rounded-left my-5\"></div>\r\n            </div>\r\n            <div class=\"card mb-0\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"card-content p-3\" style=\"min-height: 70vh\">\r\n                        <div class=\"animated fadeInDown faster text-center\">\r\n                            <img src=\"../../../../assets/images/logo5.png\" width=\"60\" height=\"60\" alt=\"login-logo\">\r\n                        </div>\r\n                        <div class=\"card-title text-uppercase text-center py-3 font-weight-bold text-dark\">Sign in</div>\r\n\r\n                        <form [formGroup]=\"signInForm\" (ngSubmit)=\"onSubmit()\" id=\"signInForm\" class=\"animated fadeInUp faster\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"position-relative has-icon-left\">\r\n                                    <input formControlName=\"username\"\r\n                                           [minlength]=\"appConstants.USERNAME_MIN_LENGTH\"\r\n                                           [maxlength]=\"appConstants.USERNAME_MAX_LENGTH\"\r\n                                           class=\"form-control\"\r\n                                           [ngClass]=\"{'is-invalid': submitted && getForm.username.errors}\"\r\n                                           placeholder=\"username\"/>\r\n                                    <div class=\"form-control-position text-dark\">\r\n                                        <i class=\"fas fa-user\"></i>\r\n                                    </div>\r\n                                    <div *ngIf=\"submitted && getForm.username.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                        <div *ngIf=\"getForm.username.errors.required\">\r\n                                            Username is required\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.username.errors.pattern\">\r\n                                            Username has no special character except for _\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.username.errors.maxlength || getForm.username.errors.minlength\">\r\n                                            Username has from {{appConstants.USERNAME_MIN_LENGTH}} to {{appConstants.USERNAME_MAX_LENGTH}} characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <div class=\"position-relative has-icon-left\">\r\n                                    <input formControlName=\"password\"\r\n                                           type=\"password\"\r\n                                           [minlength]=\"appConstants.PASSWORD_MIN_LENGTH\"\r\n                                           [maxlength]=\"appConstants.PASSWORD_MAX_LENGTH\"\r\n                                           class=\"form-control\"\r\n                                           [ngClass]=\"{'is-invalid': submitted && getForm.password.errors}\"\r\n                                           placeholder=\"password\"/>\r\n                                    <div class=\"form-control-position text-dark\">\r\n                                        <i class=\"fas fa-lock\"></i>\r\n                                    </div>\r\n                                    <div *ngIf=\"submitted && getForm.password.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                        <div *ngIf=\"getForm.password.errors.required\">\r\n                                            Password is required\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.password.errors.pattern\">\r\n                                            Password only has alphabets, numbers, -, _, spaces\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.password.errors.maxlength || getForm.password.errors.minlength\">\r\n                                            Password has from {{appConstants.PASSWORD_MIN_LENGTH}} to {{appConstants.PASSWORD_MAX_LENGTH}} characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-row mr-0 ml-0\">\r\n                                <div class=\"form-group col-6\">\r\n                                    <div class=\"icheck-primary\">\r\n                                        <input type=\"checkbox\" id=\"user-checkbox\" checked=\"\">\r\n                                        <label for=\"user-checkbox\">Remember me</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-outline-primary font-weight-bold w-100\">Sign in</button>\r\n                            <div class=\"text-center pt-3\">\r\n                                <hr>\r\n                                <p class=\"text-muted\">Are you new? <a routerLink=\"/sign-up\"> Sign up here</a></p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AppConstants} from \"src/app/constants/app-constants\";\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthenticatedService} from \"src/app/services/authenticated.service\";\r\nimport {AlertService} from \"src/app/services/alert.service\";\r\nimport {SignUpDto} from \"src/app/dto/request/sign-up-dto\";\r\nimport {UserDto} from \"src/app/dto/response/user-dto\";\r\nimport {Response} from \"src/app/dto/abstract-response\";\r\n\r\n@Component({\r\n    selector: 'app-sign-up',\r\n    templateUrl: './sign-up.component.html',\r\n    styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n    signUpForm: FormGroup;\r\n\r\n    submitted: boolean = false;\r\n\r\n    appConstants = AppConstants;\r\n\r\n    constructor(private _formBuilder: FormBuilder,\r\n                private _router: Router,\r\n                private _alertService: AlertService,\r\n                private _authenticatedService: AuthenticatedService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this._authenticatedService.isAuthenticated()) {\r\n            this._router.navigateByUrl(\"/\");\r\n        }\r\n\r\n        this.initForm();\r\n    }\r\n\r\n    private initForm(): void {\r\n        this.signUpForm = this._formBuilder.group(\r\n            {\r\n                username: [\"\", [\r\n                    Validators.required,\r\n                    Validators.pattern(AppConstants.USERNAME_REGEX),\r\n                    Validators.minLength(AppConstants.USERNAME_MIN_LENGTH),\r\n                    Validators.maxLength(AppConstants.USERNAME_MAX_LENGTH),\r\n                ]],\r\n                password: [\"\", [\r\n                    Validators.required,\r\n                    Validators.pattern(AppConstants.PASSWORD_REGEX),\r\n                    Validators.minLength(AppConstants.PASSWORD_MIN_LENGTH),\r\n                    Validators.maxLength(AppConstants.PASSWORD_MAX_LENGTH),\r\n                ]],\r\n                confirmPassword: [\"\", [\r\n                    Validators.required,\r\n                    Validators.pattern(AppConstants.PASSWORD_REGEX),\r\n                    Validators.minLength(AppConstants.PASSWORD_MIN_LENGTH),\r\n                    Validators.maxLength(AppConstants.PASSWORD_MAX_LENGTH),\r\n                ]],\r\n\r\n                fullname: [\"\", [\r\n                    Validators.required,\r\n                    Validators.minLength(AppConstants.FULLNAME_MIN_LENGTH),\r\n                    Validators.maxLength(AppConstants.FULLNAME_MAX_LENGTH),\r\n                ]],\r\n                address: [\"\", [\r\n                    Validators.required,\r\n                    Validators.minLength(AppConstants.ADDRESS_MIN_LENGTH),\r\n                    Validators.maxLength(AppConstants.ADDRESS_MAX_LENGTH),\r\n                ]],\r\n                phoneNumber: [\"\", [\r\n                    Validators.required,\r\n                    Validators.pattern(AppConstants.NUMBER_ONLY_REGEX),\r\n                    Validators.minLength(AppConstants.PHONE_NUMBER_MIN_LENGTH),\r\n                    Validators.maxLength(AppConstants.PHONE_NUMBER_MAX_LENGTH),\r\n                ]],\r\n            }\r\n        );\r\n    }\r\n\r\n    get getForm() {\r\n        return this.signUpForm.controls;\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.submitted = true;\r\n\r\n        if (this.getForm.password.value !== this.getForm.confirmPassword.value) {\r\n            this._alertService.error(\"Password fields are not the same\");\r\n            return;\r\n        }\r\n\r\n        if (this.signUpForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        let signUpDto: SignUpDto = <SignUpDto> this.signUpForm.value;\r\n        this._authenticatedService.signUp(signUpDto)\r\n                                  .subscribe((response: Response<UserDto>) => {\r\n                                      this._alertService.success(`Welcome to Book Garden!<br>You can sign in <a href=\"/sign-in\">here</a>`)\r\n                                  });\r\n    }\r\n\r\n}\r\n","<div class=\"full-screen\">\r\n    <div class=\"card-authentication2 mt-4 mx-auto\">\r\n        <div class=\"card-group animated fadeIn faster\">\r\n            <div class=\"card mb-0\">\r\n                <div class=\"bg-signup2\"></div>\r\n                <div class=\"card-img-overlay rounded-left my-5\"></div>\r\n            </div>\r\n            <div class=\"card mb-0\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"card-content p-3\" style=\"min-height: 70vh\">\r\n                        <div class=\"animated fadeInDown faster text-center\">\r\n                            <img src=\"../../../../assets/images/icons/theme/note.png\" width=\"100\" height=\"100px\" alt=\"login-logo\">\r\n                        </div>\r\n                        <div class=\"card-title text-uppercase text-center py-3 font-weight-bold text-dark\">Sign up</div>\r\n\r\n                        <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\" id=\"signUpForm\" class=\"animated fadeInUp faster\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"position-relative has-icon-left\">\r\n                                    <input formControlName=\"username\"\r\n                                           [minlength]=\"appConstants.USERNAME_MIN_LENGTH\"\r\n                                           [maxlength]=\"appConstants.USERNAME_MAX_LENGTH\"\r\n                                           class=\"form-control\"\r\n                                           [ngClass]=\"{'is-invalid': submitted && getForm.username.errors}\"\r\n                                           placeholder=\"Username\"/>\r\n                                    <div class=\"form-control-position text-dark\">\r\n                                        <i class=\"fas fa-user\"></i>\r\n                                    </div>\r\n                                    <div *ngIf=\"submitted && getForm.username.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                        <div *ngIf=\"getForm.username.errors.required\">\r\n                                            Username is required\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.username.errors.pattern\">\r\n                                            Username has no special character except for _\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.username.errors.maxlength || getForm.username.errors.minlength\">\r\n                                            Username has from {{appConstants.USERNAME_MIN_LENGTH}} to {{appConstants.USERNAME_MAX_LENGTH}} characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <div class=\"position-relative has-icon-left\">\r\n                                    <input formControlName=\"password\"\r\n                                           type=\"password\"\r\n                                           [minlength]=\"appConstants.PASSWORD_MIN_LENGTH\"\r\n                                           [maxlength]=\"appConstants.PASSWORD_MAX_LENGTH\"\r\n                                           class=\"form-control\"\r\n                                           [ngClass]=\"{'is-invalid': submitted && getForm.password.errors}\"\r\n                                           placeholder=\"Password\"/>\r\n                                    <div class=\"form-control-position text-dark\">\r\n                                        <i class=\"fas fa-lock\"></i>\r\n                                    </div>\r\n                                    <div *ngIf=\"submitted && getForm.password.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                        <div *ngIf=\"getForm.password.errors.required\">\r\n                                            Password is required\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.password.errors.pattern\">\r\n                                            Password only has alphabets, numbers, -, _, spaces\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.password.errors.maxlength || getForm.password.errors.minlength\">\r\n                                            Password has from {{appConstants.PASSWORD_MIN_LENGTH}} to {{appConstants.PASSWORD_MAX_LENGTH}} characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <div class=\"position-relative has-icon-left\">\r\n                                    <input formControlName=\"confirmPassword\"\r\n                                           type=\"password\"\r\n                                           [minlength]=\"appConstants.PASSWORD_MIN_LENGTH\"\r\n                                           [maxlength]=\"appConstants.PASSWORD_MAX_LENGTH\"\r\n                                           class=\"form-control\"\r\n                                           [ngClass]=\"{'is-invalid': submitted && getForm.confirmPassword.errors}\"\r\n                                           placeholder=\"Password confirm\"/>\r\n                                    <div class=\"form-control-position text-dark\">\r\n                                        <i class=\"fas fa-lock\"></i>\r\n                                    </div>\r\n                                    <div *ngIf=\"submitted && getForm.confirmPassword.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                        <div *ngIf=\"getForm.confirmPassword.errors.required\">\r\n                                            Password is required\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.confirmPassword.errors.pattern\">\r\n                                            Password only has alphabets, numbers, -, _, spaces\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.confirmPassword.errors.maxlength || getForm.confirmPassword.errors.minlength\">\r\n                                            Password has from {{appConstants.PASSWORD_MIN_LENGTH}} to {{appConstants.PASSWORD_MAX_LENGTH}} characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                            <div class=\"form-group\">\r\n                                <div class=\"position-relative has-icon-left\">\r\n                                    <input formControlName=\"fullname\"\r\n                                           [minlength]=\"appConstants.FULLNAME_MIN_LENGTH\"\r\n                                           [maxlength]=\"appConstants.FULLNAME_MAX_LENGTH\"\r\n                                           class=\"form-control\"\r\n                                           [ngClass]=\"{'is-invalid': submitted && getForm.fullname.errors}\"\r\n                                           placeholder=\"Full name\"/>\r\n                                    <div class=\"form-control-position text-dark\">\r\n                                        <i class=\"fas fa-file-signature\"></i>\r\n                                    </div>\r\n                                    <div *ngIf=\"submitted && getForm.fullname.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                        <div *ngIf=\"getForm.fullname.errors.required\">\r\n                                            Full name is required\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.fullname.errors.maxlength || getForm.fullname.errors.minlength\">\r\n                                            Full name has from {{appConstants.FULLNAME_MIN_LENGTH}} to {{appConstants.FULLNAME_MAX_LENGTH}} characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <div class=\"position-relative has-icon-left\">\r\n                                    <input formControlName=\"address\"\r\n                                           [minlength]=\"appConstants.ADDRESS_MIN_LENGTH\"\r\n                                           [maxlength]=\"appConstants.ADDRESS_MAX_LENGTH\"\r\n                                           class=\"form-control\"\r\n                                           [ngClass]=\"{'is-invalid': submitted && getForm.address.errors}\"\r\n                                           placeholder=\"Address\"/>\r\n                                    <div class=\"form-control-position text-dark\">\r\n                                        <i class=\"fas fa-map-marker-alt\" aria-hidden=\"true\"></i>\r\n                                    </div>\r\n                                    <div *ngIf=\"submitted && getForm.address.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                        <div *ngIf=\"getForm.address.errors.required\">\r\n                                            Address is required\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.address.errors.maxlength || getForm.address.errors.minlength\">\r\n                                            Address has from {{appConstants.ADDRESS_MIN_LENGTH}} to {{appConstants.ADDRESS_MAX_LENGTH}} characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"form-group\">\r\n                                <div class=\"position-relative has-icon-left\">\r\n                                    <input formControlName=\"phoneNumber\"\r\n                                           [minlength]=\"appConstants.PHONE_NUMBER_MIN_LENGTH\"\r\n                                           [maxlength]=\"appConstants.PHONE_NUMBER_MAX_LENGTH\"\r\n                                           class=\"form-control\"\r\n                                           [ngClass]=\"{'is-invalid': submitted && getForm.phoneNumber.errors}\"\r\n                                           placeholder=\"Phone number\"/>\r\n                                    <div class=\"form-control-position text-dark\">\r\n                                        <i class=\"fas fa-phone\" aria-hidden=\"true\"></i>\r\n                                    </div>\r\n                                    <div *ngIf=\"submitted && getForm.phoneNumber.errors\" class=\"invalid-feedback text-nowrap\">\r\n                                        <div *ngIf=\"getForm.phoneNumber.errors.required\">\r\n                                            Phone number is required\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.phoneNumber.errors.pattern\">\r\n                                            Phone number has only numbers\r\n                                        </div>\r\n                                        <div *ngIf=\"getForm.phoneNumber.errors.maxlength || getForm.phoneNumber.errors.minlength\">\r\n                                            Phone number has from {{appConstants.PHONE_NUMBER_MIN_LENGTH}} to {{appConstants.PHONE_NUMBER_MAX_LENGTH}} characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <br>\r\n\r\n                            <button type=\"submit\" class=\"btn btn-outline-dark font-weight-bold w-100\">Sign up</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\nimport {Cart, CartItem} from \"src/app/dom/cart\";\nimport {CartService} from \"src/app/services/cart.service\";\nimport {BookDto} from \"src/app/dto/response/book-dto\";\nimport {BookService} from \"src/app/services/book.service\";\nimport {getData, Response} from \"src/app/dto/abstract-response\";\nimport {BookInCart} from \"src/app/dom/book-in-cart\";\nimport {AlertService} from \"src/app/services/alert.service\";\nimport {SweetAlertResult} from \"sweetalert2\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {AuthenticatedService} from \"src/app/services/authenticated.service\";\nimport {AppConstants} from \"src/app/constants/app-constants\";\nimport {catchError} from \"rxjs/operators\";\nimport {throwError} from \"rxjs\";\nimport * as HttpStatus from 'http-status-codes';\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {UserDto} from \"src/app/dto/response/user-dto\";\n\n@Component({\n    selector: 'app-your-cart',\n    templateUrl: './your-cart.component.html',\n    styleUrls: ['./your-cart.component.css']\n})\nexport class YourCartComponent implements OnInit {\n\n    cart: Cart;\n\n    bookInCart: BookInCart[] = [];\n\n    totalPrice: number = 0;\n\n    appConstants = AppConstants;\n\n    user: UserDto;\n\n    constructor(private _cartService: CartService,\n                private _alertService: AlertService,\n                private _formBuilder: FormBuilder,\n                public _authenticatedService: AuthenticatedService,\n                private _bookService: BookService) {\n\n    }\n\n    ngOnInit(): void {\n        this.loadAsyncData();\n    }\n\n    loadAsyncData(): void {\n        this.loadUser();\n        this.loadCart();\n    }\n\n    loadUser(): void {\n        if (this._authenticatedService.isAuthenticated()) {\n            this._authenticatedService.getCurrentUser().subscribe((response: Response<UserDto>) => {\n                this.user = getData<UserDto>(response);\n            });\n        }\n    }\n\n    loadCart(): void {\n        this.cart = this._cartService.getCart();\n        this.bookInCart = [];\n\n        let deletedBookIds = [];\n\n        this.cart.items.forEach((item: CartItem) => {\n            this._bookService.findOne(item.bookId)\n                             .pipe(catchError((error: HttpErrorResponse) => {\n                                 if (error.status === HttpStatus.NOT_FOUND) {\n                                     deletedBookIds.push(item.bookId);\n                                     error.error.response.message = `The book with id: ${deletedBookIds} was deleted by our admins`;\n                                     this._cartService.remove(item.bookId);\n                                     return throwError(error.error);\n                                 }\n                             }))\n                             .subscribe((response: Response<BookDto>) => {\n                                 let bookInCart: BookInCart = new BookInCart();\n                                 bookInCart.book = getData<BookDto>(response);\n                                 bookInCart.amount = item.amount;\n                                 this.bookInCart.push(bookInCart);\n                                 this.calculateTotalPrice();\n                             });\n        });\n    }\n\n    removeFromCart(book: BookDto): void {\n        this._alertService.ask(`You are removing<br>${book.title}`)\n                          .then((result: SweetAlertResult) => {\n                              if (result.value) {\n                                  this._cartService.remove(book.id);\n                                  this.loadAsyncData();\n                              }\n                          });\n    }\n\n    validateCart(): boolean {\n        for (let i = 0; i < this.bookInCart.length; i++) {\n            if (this.bookInCart[i].amount > AppConstants.CART_CAPACITY_PER_ITEM_MAX) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    onSubmit(): void {\n        if (this.cart.items.length === 0) {\n            this._alertService.warn(\"Your cart is empty\");\n            return;\n        }\n\n        if (this.cart.items.length > AppConstants.CART_CAPACITY_MAX\n                || !this.validateCart()) {\n            this._alertService.error(\"The cart was corrupted, so it will be clear, sorry\");\n            this.clearCart();\n            return;\n        }\n\n        this.calculateTotalPrice();\n        let alertMessage = `Your total is <strong>${Number(this.totalPrice).toLocaleString('en-US')} VND</strong><br>\n                            Would you like to create an order now?`;\n\n        this._alertService.ask(alertMessage)\n                          .then((result: SweetAlertResult) => {\n                              if (result.value) {\n                                  this._cartService.checkout(this.cart)\n                                                   .subscribe(value => {\n                                                       this.clearCart();\n                                                       this._alertService.success(\"Thank you for using our service<br>\" +\n                                                                                  \"Please check your <strong><a class='text-decoration-none' href='/your-profile'>order history</a></strong><br>\" +\n                                                                                  \"We will contact you soon\");\n                                                   });\n                              }\n                          });\n    }\n\n    clearCart(): void {\n        this._cartService.clear();\n        this.loadAsyncData();\n    }\n\n    calculateTotalPrice(): void {\n        let result = 0;\n        for (let item of this.bookInCart) {\n            result += item.book.price * item.amount;\n        }\n\n        this.totalPrice = result;\n    }\n\n    updateAmount(event: any, id: string): void {\n        let newAmount = event.target.value;\n\n        if (newAmount < 1) {\n            event.target.value = 1;\n            newAmount = 1;\n        }\n\n        if (newAmount > AppConstants.CART_CAPACITY_PER_ITEM_MAX) {\n            event.target.value = AppConstants.CART_CAPACITY_PER_ITEM_MAX;\n            newAmount = AppConstants.CART_CAPACITY_PER_ITEM_MAX;\n        }\n\n        this._cartService.updateAmount(id, newAmount);\n        this.updateAmountForBookInCart(id, newAmount);\n    }\n\n    updateAmountForBookInCart(id: string, newAmount: number): void {\n        for (let i = 0; i < this.bookInCart.length; i++) {\n            if (this.bookInCart[i].book.id === id) {\n                this.bookInCart[i].amount = newAmount;\n                this.calculateTotalPrice();\n                return;\n            }\n        }\n    }\n\n}\n","<div class=\"container-fluid animated fadeIn mt-4 mb-5 full-screen\">\n    <div *ngIf=\"bookInCart.length === 0\">\n        <div class=\"col-12 text-center\">\n            <h1 class=\"text-secondary\">Your cart is empty</h1>\n        </div>\n    </div>\n\n    <div class=\"row\" *ngIf=\"bookInCart.length !== 0\">\n        <div class=\"col-lg-4\">\n            <div class=\"card h-100\">\n                <div class=\"card-header bg-primary\">\n                    <h4 class=\"text-white text-wrap\">\n                        <i class=\"fas fa-money-bill\"></i> Check out\n                    </h4>\n                </div>\n                <div *ngIf=\"!_authenticatedService.isAuthenticated()\" class=\"card-body\">\n                    <div class=\"d-flex justify-content-center align-items-center h-100\">\n                        <div class=\"row\">\n                            <div class=\"col-lg-12 col-sm-6 text-center\">\n                                <h2 class=\"font-weight-bold text-uppercase text-dark\">\n                                    Total: <span class=\"text-danger\">{{totalPrice | number:'1.0':'en-US'}} VND</span>\n                                </h2>\n                                <img src=\"assets/images/logo.png\" class=\"img-fluid\">\n                            </div>\n                            <div class=\"col-lg-12 col-sm-6 text-center\">\n\n                                <h3 class=\"text-dark\">\n                                    Please <a class=\"text-decoration-none\" routerLink=\"/sign-in\">sign in</a> before check out\n                                </h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"_authenticatedService.isAuthenticated()\" class=\"card-body\">\n                    <div class=\"text-center\">\n                        <img src=\"assets/images/logo.png\" class=\"img-fluid\">\n                    </div>\n                    <form (ngSubmit)=\"onSubmit()\" class=\"form-group\">\n                        <div class=\"form-group\">\n                            <label class=\"font-weight-bold\">Id</label>\n                            <input class=\"form-control\"\n                                   readonly\n                                   [value]=\"user.id\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"font-weight-bold\">Name</label>\n                            <input class=\"form-control\"\n                                   readonly\n                                   [value]=\"user.fullname\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"font-weight-bold\">Address</label>\n                            <input class=\"form-control\"\n                                   readonly\n                                   [value]=\"user.address\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"font-weight-bold\">Email</label>\n                            <input class=\"form-control\"\n                                   readonly\n                                   [value]=\"user.email\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"font-weight-bold\">Phone</label>\n                            <input class=\"form-control\"\n                                   readonly\n                                   [value]=\"user.phoneNumber\">\n                        </div>\n                        <br>\n                        <h3 class=\"font-weight-bold text-uppercase\">\n                            Total: <span class=\"text-danger\">{{totalPrice | number:'1.0':'en-US'}} VND</span>\n                        </h3>\n                        <br>\n                        <button type=\"submit\" class=\"btn btn-primary font-weight-bold\">\n                            <i class=\"fas fa-money-check-alt\"></i> Check out\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-8 mt-lg-0 mt-sm-3\">\n            <div class=\"card h-100\">\n                <div class=\"card-header bg-primary\">\n                    <h4 class=\"text-white text-wrap\">\n                        <i class=\"fa fa-shopping-cart mr-1\" aria-hidden=\"true\"></i> Your cart\n                    </h4>\n                </div>\n                <div class=\"card-body bg-white\">\n                    <div *ngFor=\"let item of bookInCart\">\n                        <div class=\"card shadow-none rounded\">\n                            <div class=\"card-body\">\n                                <div class=\"row\">\n                                    <div class=\"col-lg-2 text-center\">\n                                        <img class=\"border-primary border img-fluid h-100\"\n                                             width=\"150\"\n                                             onerror=\"this.src='assets/images/no-image.png';\"\n                                             src=\"https://storage.googleapis.com/book-garden.appspot.com/book/{{item.book.image}}\"\n                                             alt=\"Card image front\">\n                                    </div>\n                                    <div class=\"col-lg-10 mt-2 mt-lg-0 d-flex flex-column\">\n                                        <div class=\"row mt-2 mb-3\">\n                                            <div class=\"col-lg-12 text-left\">\n                                                <p class=\"card-text text-dark\">\n                                                    <i class=\"fas fa-book\"></i>\n                                                    <strong> {{item.book.title}}</strong>\n                                                </p>\n                                                <p class=\"card-text\">\n                                                    <i class=\"fas fa-user\"></i>\n                                                    <strong class=\"text-dark\"> Author</strong>: {{item.book.author.fullname}}\n                                                </p>\n                                                <p class=\"card-text\">\n                                                    <i class=\"fas fa-tag\"></i>\n                                                    <strong class=\"text-dark\"> Unit price</strong>: {{item.book.price | number:'1.0':'en-US'}} VND\n                                                </p>\n                                                <p class=\"card-text form-inline\">\n                                                    <i class=\"fas fa-shopping-basket mr-1\"></i>\n                                                    <strong class=\"text-dark\"> Amount</strong>:\n                                                    <input type=\"number\"\n                                                           min=\"1\"\n                                                           class=\"form-control-sm form-control ml-2\"\n                                                           [max]=\"appConstants.CART_CAPACITY_PER_ITEM_MAX\"\n                                                           [value]=\"item.amount\" (blur)=\"updateAmount($event, item.book.id)\">\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <div class=\"row mt-auto ml-auto\">\n                                            <div class=\"col-lg-12\">\n                                                <button class=\"btn btn-danger text-white font-weight-bold\" (click)=\"removeFromCart(item.book)\">\n                                                    <i class=\"fas fa-minus-circle\"></i> Remove\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {UserOrderDto} from \"src/app/dto/response/user-order-dto\";\nimport {OrderService} from \"src/app/services/order.service\";\nimport {getData} from \"src/app/dto/abstract-response\";\n\n@Component({\n    selector: 'app-your-profile',\n    templateUrl: './your-profile.component.html',\n    styleUrls: ['./your-profile.component.css']\n})\nexport class YourProfileComponent implements OnInit {\n\n    user = {\n        photo: \"photo\",\n        fullName: \"fullName\",\n        email: \"email\",\n        mark: \"mark\"\n    }\n\n    orders: UserOrderDto[] = [];\n\n    constructor(private _orderService: OrderService) {\n\n    }\n\n    ngOnInit(): void {\n        this.findOrders();\n    }\n\n    findOrders(): void {\n        this._orderService.findAllByUser()\n                          .subscribe(value => {\n                              this.orders = getData<UserOrderDto[]>(value);\n                          });\n    }\n\n}\n","<div class=\"container animated fadeIn mt-4 mb-5 full-screen\">\n    <div class=\"font-weight-bold\">\n        <div class=\"text-uppercase text-center\">\n            <p class=\"h4 text-dark\">\n                <img src=\"assets/images/icons/theme/man.png\">Your profile\n            </p>\n        </div>\n        <div class=\"\">\n            <div class=\"row\">\n                <div class=\"col-lg-4\">\n                    <div class=\"profile-card-3 h-100\">\n                        <div class=\"card h-100\">\n                            <div class=\"user-fullimage\">\n                                <img onerror=\"this.src='assets/images/avatars/default.jpg'\"\n                                     src=\"assets/images/avatars/{{user.photo}}\" class=\"card-img-top\">\n                                <div class=\"details py-2\" style=\"background-color: rgba(52, 58, 64, 0.5)\">\n                                    <h5 class=\"mb-1 text-white ml-3\">{{user.fullName}}</h5>\n                                    <h6 class=\"text-white ml-3\">{{user.email}}</h6>\n                                </div>\n                            </div>\n                            <div class=\"card-body text-center\">\n                                <hr>\n                                <a class=\"btn btn-primary shadow-primary btn-sm btn-round m-1 text-white font-weight-bold\">Choose avatar</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-8\">\n                    <div class=\"card h-100\">\n                        <div class=\"card-body\">\n                            <ul class=\"nav nav-tabs nav-tabs-primary top-icon nav-justified\">\n                                <li class=\"nav-item\">\n                                    <a href=\"javascript:void();\" data-target=\"#general\" data-toggle=\"pill\" class=\"nav-link active\">\n                                        <i class=\"far fa-user\"></i> <span class=\"hidden-xs\">Your orders</span>\n                                    </a>\n                                </li>\n                                <li class=\"nav-item\">\n                                    <a href=\"javascript:void();\" data-target=\"#profile\" data-toggle=\"pill\" class=\"nav-link\">\n                                        <i class=\"far fa-edit\"></i> <span class=\"hidden-xs\">Edit profile</span>\n                                    </a>\n                                </li>\n                            </ul>\n                            <div class=\"tab-content\">\n                                <div class=\"tab-pane active\" id=\"general\">\n                                    <div class=\"row mt-5\">\n                                        <div class=\"col-12\">\n                                            <div *ngFor=\"let order of orders\" class=\"card card-secondary shadow-none mb-5\">\n                                                <button class=\"d-flex justify-content-between bg-light btn btn-light text-dark font-weight-bold\"\n                                                        type=\"button\"\n                                                        data-toggle=\"collapse\"\n                                                        [attr.data-target]=\"'#collapse' + order.id\"\n                                                        [attr.aria-controls]=\"'collapse' + order.id\">\n                                                    <div class=\"mx-2 my-1\">\n                                                        Code: {{order.id}}-{{order.dateCreated}}\n                                                    </div>\n                                                    <div class=\"mx-2 my-1\">\n                                                    </div>\n                                                    <div class=\"mx-2 my-1\">\n                                                        {{order.totalAmount | number:'1.0':'en-US'}} VND\n                                                    </div>\n                                                </button>\n\n                                                <div class=\"card-body collapse\" [id]=\"'collapse' + order.id\">\n                                                    <div *ngFor=\"let orderDetail of order.orderDetails\" class=\"d-flex justify-content-between\">\n                                                        <div class=\"mx-2 my-1\">\n                                                            {{orderDetail.book.title}}\n                                                        </div>\n                                                        <div class=\"mx-2 my-1\">\n                                                        </div>\n                                                        <div class=\"mx-2 my-1\">\n                                                            {{orderDetail.amount + \" x \" + (orderDetail.price | number:'1.0':'en-US')}} VND\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"tab-pane\" id=\"profile\">\n                                    <form class=\"mt-5\" name=\"formAccount\" submit=\"submitForm()\">\n                                        <div class=\"form-group row\">\n                                            <label class=\"col-md-5 col-form-label\">Username</label>\n                                            <div class=\"col-md-7\">\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                        <div style=\"width: 40px\" class=\"input-group-text border border-secondary text-dark bg-primary\">\n                                                            <i class=\"fas fa-user\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <input readonly pattern=\"^[a-zA-Z0-9_]+$\" minlength=3 maxlength=40 class=\"form-control border border-secondary\" name=\"username\" model=\"account.username\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label class=\"col-md-5 col-form-label\">Old Password</label>\n                                            <div class=\"col-md-7\">\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                        <div style=\"width: 40px\" class=\"input-group-text border border-secondary text-dark bg-primary\">\n                                                            <i class=\"fas fa-lock\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <input readonly pattern=\"^[a-zA-Z0-9_]+$\" minlength=3 maxlength=40 class=\"form-control border border-secondary\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label class=\"col-md-5 col-form-label\">New password</label>\n                                            <div class=\"col-md-7\">\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                        <div style=\"width: 40px\" class=\"input-group-text border border-secondary text-dark bg-primary\">\n                                                            <i class=\"fas fa-lock\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <input readonly pattern=\"^[a-zA-Z0-9_]+$\" minlength=3 maxlength=40 class=\"form-control border border-secondary\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label class=\"col-md-5 col-form-label\">Full name</label>\n                                            <div class=\"col-md-7\">\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                        <div style=\"width: 40px\" class=\"input-group-text border border-secondary text-dark bg-primary\">\n                                                            <i class=\"fas fa-sticky-note\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <input required pattern=\"^[a-zA-ZÀÁÂÃÈÉÊẾÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềếểệỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ\\s]+$\" minlength=5 maxlength=40 class=\"form-control border border-secondary\" name=\"fullName\" model=\"account.fullName\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label class=\"col-md-5 col-form-label\">Email</label>\n                                            <div class=\"col-md-7\">\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                        <div style=\"width: 40px\" class=\"input-group-text border border-secondary text-dark bg-primary\">\n                                                            <i class=\"fas fa-envelope\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <input readonly=\"state == UPDATE_STATE\" required pattern=\"^[a-zA-Z][a-zA-Z0-9_\\.]{5,50}@[a-z0-9]{2,}(\\.[a-z0-9]{2,4}){1,2}$\" type=\"email\" maxlength=75 class=\"form-control border border-secondary\" name=\"email\" model=\"account.email\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label class=\"col-md-5 col-form-label\">PHONE NUMBER</label>\n                                            <div class=\"col-md-7\">\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                        <div style=\"width: 40px\" class=\"input-group-text border border-secondary text-dark bg-primary\">\n                                                            <i class=\"fas fa-phone\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <input required pattern=\"^[0-9]+$\" minlength=10 maxlength=10 class=\"form-control border border-secondary\" name=\"phoneNumber\" model=\"account.phoneNumber\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label class=\"col-md-5 col-form-label\">ADDRESS</label>\n                                            <div class=\"col-md-7\">\n                                                <div class=\"input-group\">\n                                                    <div class=\"input-group-prepend\">\n                                                        <div style=\"width: 40px\" class=\"input-group-text border border-secondary text-dark bg-primary\">\n                                                            <i class=\"fas fa-map-marker\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <input required pattern=\"^[0-9]+$\" minlength=10 maxlength=10 class=\"form-control border border-secondary\" name=\"phoneNumber\" model=\"account.phoneNumber\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"form-group row\">\n                                            <label class=\"col-sm-4 col-form-label\"></label>\n                                            <div class=\"col-sm-8 d-flex\">\n                                                <div class=\"ml-auto\">\n                                                    <div click=\"resetForm()\" style=\"cursor: pointer;\" class=\"btn btn-secondary text-light border border-secondary mr-2 font-weight-bold\">\n                                                        <i class=\"fas fa-redo-alt\"></i> Reset\n                                                    </div>\n                                                    <button class=\"btn btn-primary text-white border border-primary font-weight-bold\" type=\"submit\"><i class=\"fas fa-star\"></i> Update</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable, throwError} from \"rxjs\";\r\nimport {AlertService} from \"src/app/services/alert.service\";\r\nimport {SignInDto} from \"src/app/dto/request/sign-in-dto\";\r\nimport {SessionStorageKeys} from \"src/app/constants/session-storage-keys\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbstractService {\r\n\r\n    constructor(private _http: HttpClient,\r\n                private _alertService: AlertService) {\r\n\r\n    }\r\n\r\n    /**\r\n     * Helper methods\r\n     * */\r\n\r\n    protected handleError(error: HttpErrorResponse): Observable<never>  {\r\n        return throwError(error);\r\n    }\r\n\r\n    /**\r\n     * HTTP methods\r\n     * */\r\n\r\n    protected get<RESPONSE_TYPE> (url: string, params?: any): Observable<RESPONSE_TYPE> {\r\n        return this._http.get<RESPONSE_TYPE>(url, {params: params});\r\n    }\r\n\r\n    protected post<REQUEST_TYPE, RESPONSE_TYPE> (url: string, body?: REQUEST_TYPE, withCredentials?: boolean): Observable<RESPONSE_TYPE>  {\r\n        if (!withCredentials) {\r\n            return this._http.post<RESPONSE_TYPE>(url, body);\r\n        }\r\n\r\n        let signInDto: SignInDto = JSON.parse(localStorage.getItem(SessionStorageKeys.USER));\r\n\r\n        const headers = new HttpHeaders(signInDto ? {authorization: \"Basic \" + btoa(signInDto.username + \":\" + signInDto.password)}\r\n                                                  : undefined);\r\n\r\n        return this._http.post<RESPONSE_TYPE>(url, body, {headers: headers});\r\n    }\r\n\r\n    protected put<REQUEST_TYPE, RESPONSE_TYPE> (url: string, body: REQUEST_TYPE): Observable<RESPONSE_TYPE>  {\r\n        return this._http.put<RESPONSE_TYPE>(url, body);\r\n    }\r\n\r\n    protected delete<REQUEST_TYPE, RESPONSE_TYPE> (url: string, body: REQUEST_TYPE): Observable<RESPONSE_TYPE>  {\r\n        let options = {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\"\r\n            }),\r\n            body: body\r\n        };\r\n\r\n        return this._http.delete<RESPONSE_TYPE>(url, options);\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport Swal, {SweetAlertResult} from \"sweetalert2\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    success(message: string): Promise<SweetAlertResult> {\r\n        return Swal.fire({\r\n            icon: \"success\",\r\n            html: message,\r\n        })\r\n    }\r\n\r\n    error(message: string): Promise<SweetAlertResult> {\r\n        return Swal.fire({\r\n            icon: \"error\",\r\n            html: message,\r\n        })\r\n    }\r\n\r\n    warn(message: string): Promise<SweetAlertResult> {\r\n        return Swal.fire({\r\n            icon: \"warning\",\r\n            html: message,\r\n        })\r\n    }\r\n\r\n    ask(message: string): Promise<SweetAlertResult> {\r\n        let title: string = \"Are you sure\";\r\n        let yesMessage: string = \"Ok\";\r\n        let cancelMessage: string = \"Cancel\";\r\n\r\n        return Swal.fire({\r\n            icon: \"warning\",\r\n            title: `${title}?`,\r\n            html: message,\r\n            confirmButtonColor: '#3085d6',\r\n            confirmButtonText: yesMessage,\r\n            showCancelButton: true,\r\n            cancelButtonColor: \"#d33\",\r\n            cancelButtonText: cancelMessage,\r\n            focusCancel: true\r\n        });\r\n    }\r\n\r\n    loading(): Promise<SweetAlertResult> {\r\n        return Swal.fire({\r\n            title: \"\",\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            },\r\n        });\r\n    }\r\n\r\n    close(): void {\r\n        Swal.close();\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"src/app/services/abstract.service\";\nimport {Observable} from \"rxjs\";\nimport {ApiUrl} from \"src/app/constants/api-url\";\nimport {catchError} from \"rxjs/operators\";\nimport {SignInDto} from \"src/app/dto/request/sign-in-dto\";\nimport {UserDto} from \"src/app/dto/response/user-dto\";\nimport {Response} from \"src/app/dto/abstract-response\";\nimport {SessionStorageKeys} from \"src/app/constants/session-storage-keys\";\nimport {SignUpDto} from \"src/app/dto/request/sign-up-dto\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticatedService extends AbstractService {\n\n    saveUserToLocal(signInDto: SignInDto): void {\n        localStorage.setItem(SessionStorageKeys.USER, JSON.stringify(signInDto));\n    }\n\n    signUp(signUpDto: SignUpDto): Observable<Response<UserDto>> {\n        return super.post<SignUpDto, Response<UserDto>>(ApiUrl.USER_SIGN_UP, signUpDto)\n                    .pipe(catchError(super.handleError));\n    }\n\n    signIn(signInDto: SignInDto): Observable<Response<UserDto>> {\n        return super.post<SignInDto, Response<UserDto>>(ApiUrl.USER_SIGN_IN, signInDto)\n                    .pipe(catchError(super.handleError));\n    }\n\n    signOut(): void {\n        localStorage.removeItem(SessionStorageKeys.USER);\n    }\n\n    isAuthenticated(): boolean {\n        if (localStorage.getItem(SessionStorageKeys.USER)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getCurrentUser(): Observable<Response<UserDto>> {\n        if (!this.isAuthenticated()) {\n            return null;\n        }\n\n        let username = JSON.parse(localStorage.getItem(SessionStorageKeys.USER)).username;\n        return super.get<Response<UserDto>>(ApiUrl.USER_FIND_BY_USERNAME, {username: username})\n                    .pipe(catchError(super.handleError));\n    }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {AbstractService} from \"./abstract.service\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {Observable} from \"rxjs\";\r\nimport {BookDto} from \"src/app/dto/response/book-dto\";\r\nimport {ApiUrl} from \"src/app/constants/api-url\";\r\nimport {BookListCriteriaDto} from \"src/app/dto/request/book-list-criteria-dto\";\r\nimport {PaginationResponse, Response} from \"src/app/dto/abstract-response\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BookService extends AbstractService {\r\n\r\n    findChunkWithTitleKeywordAndPriceAndCategory(bookListCriteriaDto: BookListCriteriaDto): Observable<PaginationResponse<BookDto[]>> {\r\n        return super.post<BookListCriteriaDto, PaginationResponse<BookDto[]>>(ApiUrl.BOOK_FILTER, bookListCriteriaDto)\r\n                    .pipe(catchError(super.handleError));\r\n    }\r\n\r\n    findOne(id: String): Observable<Response<BookDto>> {\r\n        return super.get<Response<BookDto>>(ApiUrl.BOOK, {id: id})\r\n                    // .pipe(catchError(super.handleError));\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {Cart, CartItem} from \"src/app/dom/cart\";\nimport {LocalStorageKeys} from \"src/app/constants/local-storage-keys\";\nimport {AbstractService} from \"src/app/services/abstract.service\";\nimport {Observable} from \"rxjs\";\nimport {ApiUrl} from \"src/app/constants/api-url\";\nimport {catchError} from \"rxjs/operators\";\nimport {AppConstants} from \"src/app/constants/app-constants\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CartService extends AbstractService {\n\n    private cart: Cart = this.getCart();\n\n    contains(id: string): CartItem {\n        for (let item of this.cart.items) {\n            if (item.bookId === id) {\n                return item;\n            }\n        }\n\n        return null;\n    }\n\n    reachMax(): boolean {\n        return this.cart.items.length >= AppConstants.CART_CAPACITY_MAX;\n    }\n\n    reachMaxItem(id: string): boolean {\n        let cartItem = this.contains(id);\n        if (!cartItem) {\n            return false;\n        }\n\n        return cartItem.amount >= AppConstants.CART_CAPACITY_PER_ITEM_MAX;\n    }\n\n    add(id: string, price: number): void {\n        for (let item of this.cart.items) {\n            if (item.bookId === id) {\n                item.amount++;\n                this.saveCart();\n                return;\n            }\n        }\n\n        this.cart.items.push(new CartItem(id, 1, price));\n        this.saveCart();\n    }\n\n    remove(id: string): void {\n        for (let i = 0; i < this.cart.items.length; i++) {\n            if (this.cart.items[i].bookId === id) {\n                this.cart.items.splice(i, 1);\n                this.saveCart();\n                return;\n            }\n        }\n    }\n\n    clear(): void {\n        this.cart = new Cart();\n        this.saveCart();\n    }\n\n    saveCart(): void {\n        localStorage.setItem(LocalStorageKeys.CART, JSON.stringify(this.cart));\n    }\n\n    getCart(): Cart {\n        if (localStorage.getItem(LocalStorageKeys.CART)) {\n            let cart = JSON.parse(localStorage.getItem(LocalStorageKeys.CART));\n            return <Cart> cart;\n        }\n\n        return new Cart();\n    }\n\n    checkout(cart: Cart): Observable<any> {\n        return super.post<Cart, any>(ApiUrl.USER_CHECK_OUT, cart, true)\n                    .pipe(catchError(super.handleError));\n    }\n\n    updateAmount(id: string, amount: number): void {\n        for (let i = 0; i < this.cart.items.length; i++) {\n            if (this.cart.items[i].bookId === id) {\n                this.cart.items[i].amount = amount;\n                this.saveCart();\n                return;\n            }\n        }\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"src/app/services/abstract.service\";\nimport {Observable} from \"rxjs\";\nimport {Response} from \"src/app/dto/abstract-response\";\nimport {ApiUrl} from \"src/app/constants/api-url\";\nimport {catchError} from \"rxjs/operators\";\nimport {CategoryDto} from \"src/app/dto/response/category-dto\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CategoryService extends AbstractService {\n\n    findAll(): Observable<Response<CategoryDto[]>> {\n        return super.get<Response<CategoryDto[]>>(ApiUrl.CATEGORY_FIND_ALL)\n                    .pipe(catchError(super.handleError));\n    }\n\n}\n","import {ErrorHandler, Injectable} from '@angular/core';\nimport {AlertService} from \"src/app/services/alert.service\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {AppUrl} from \"src/app/constants/app-url\";\nimport * as HttpStatus from \"http-status-codes\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ErrorHandlerService implements ErrorHandler {\n\n    constructor(private _alertService: AlertService) {\n\n    }\n\n    handleError(error: any): void {\n        if (!error) {\n            return;\n        }\n\n        if (error instanceof ErrorEvent) {\n            this._alertService.error(\"Error has occurred in client\");\n            return;\n        }\n\n        if (error instanceof HttpErrorResponse) {\n\n            // lost connection to server app\n            if (error.status === 0) {\n                window.location.href = `/${AppUrl.ERROR}`;\n                return;\n            }\n\n            if (error.status === HttpStatus.NOT_FOUND) {\n                window.location.href = `/${AppUrl.ERROR}`;\n                return;\n            }\n\n            this._alertService.error(error.error.response.message);\n            return;\n        }\n\n        this._alertService.error(error);\n        console.log(error)\n        // window.location.href = `/${AppUrl.ERROR}`;\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractService} from \"src/app/services/abstract.service\";\nimport {Observable} from \"rxjs\";\nimport {Response} from \"src/app/dto/abstract-response\";\nimport {ApiUrl} from \"src/app/constants/api-url\";\nimport {catchError} from \"rxjs/operators\";\nimport {UserOrderDto} from \"src/app/dto/response/user-order-dto\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrderService extends AbstractService {\n\n    findAllByUser(): Observable<Response<UserOrderDto[]>> {\n        return super.post<null, Response<UserOrderDto[]>>(ApiUrl.USER_ORDER, undefined, true)\n                    .pipe(catchError(super.handleError));\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}